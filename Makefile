# Copyright (c) 2019 Ahmed Bashandy
#
# Permission to use, copy, modify, and/or distribute this software
# for any purpose with or without fee is hereby granted, provided
# that the above copyright notice and this permission notice and the 
# disclamer below appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR(s) BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

.PHONY: all clean test $(DEP) $(LIBCAGLO) $(LIBCALGOSTATIC)


CC = gcc

# Directories
MAINDIR = $(shell pwd)
SRCDIR = $(MAINDIR)/src
OBJDIR = $(MAINDIR)/obj
TESTDIR = $(MAINDIR)/test

# Source code
SRCINC = $(wildcard $(SRCDIR)/*.h)
SRC = $(wildcard $(SRCDIR)/*.c)
TESTSRC = $(wildcard $(TESTDIR)/*.c)

# Object
OBJ = $(subst $(SRCDIR), $(OBJDIR),  $(patsubst %.c, %.o, $(SRC)))
TESTOBJ = $(patsubst %.c, %.o, $(subst $(TESTDIR), $(OBJDIR), $(TESTSRC)))

# dependecy
DEP = $(patsubst %.o,%.d,$(OBJ))

# Testing binary Binaries
TESTBIN = $(subst $(TESTDIR), $(OBJDIR), $(patsubst %.c, %, $(TESTSRC)))


# Libraries (Main output)
LIBCALGO = libcalgo.so
LIBCALGOSTATIC = libcalgo.a

# DEBUGCFLAGS = -g -O0
CFLAGS = $(DEBUGCFLAGS) -I./ -I$(SRCDIR) -I$(TESTDIR) -Wall -Werror

# Testing flags
TESTINGLDFLAGS = -L$(OBJDIR)

# Keep this target as the first one so that it gets built by default
# if you just type "make"
all: $(LIBCAGLO) $(LIBCALGOSTATIC) test


# Build object files for the library
# The "-MMD" will generates ".d" file with the same name as the ".o" file
$(OBJ): $(SRC)
	$(info Generating $@)
	# Create obj directories - same structure as sources.
	mkdir -p $(@D)
	# Use "-MMD" to create the ".d" files
	$(CC) -MMD -c -fPIC $(CFLAGS) -o $@ $(patsubst %.o, %.c, $(subst $(OBJDIR), $(SRCDIR), $@))
# $(OBJDIR)/%.o : %.c
#	$(CC) -MMD -c -fPIC $(CFLAGS) $^ -o $@


# Include the dependency files generated by the "-MMD" flag
# Note that on the intial compilation, the files do not yet exist
ifneq ($(filter clean,$(MAKECMDGOALS)),clean)
$(info Including $(DEP))
-include $(DEP)
endif

# Generate the ".so" library from the already built object files
# We just link them
$(LIBCALGO): $(OBJDIR)/$(LIBCALGO)
$(OBJDIR)/$(LIBCALGO): $(OBJ)
	$(CC) -shared $^ -o $@

# Generate a static library (Archive) so that you can link against it
# in case user does not want to use the shared library (e.g. user do
# now want to install it)
$(LIBCALGOSTATIC): $(OBJDIR)/$(LIBCALGOSTATIC)
$(OBJDIR)/$(LIBCALGOSTATIC): $(OBJ)
	$(info Need $^)
	$(AR) rcs $@ $^


# TESTING
# We want to generate a separate binary for each test.
# In order NOT to force the user to insall the shared library in some
# standard place or do some hacks with the dynamic linker or
# runpath. we will link the test suites against the static library
$(TESTOBJ): $(TESTSRC)
	$(CC) -c -fPIC $(CFLAGS) -o $@ $(patsubst %.o, %.c, $(subst $(OBJDIR), $(TESTDIR), $@))
test: $(TESTBIN)
$(TESTBIN): $(TESTOBJ) $(LIBCALGO) $(LIBCALGOSTATIC)
	$(CC) $(CFLAGS) -o $@ $@.o $(OBJDIR)/$(LIBCALGOSTATIC) $(TESTINGLDFLAGS) 


clean:
#	-rm -rf $(DEP)
	-rm -rf $(OBJDIR)

